version: "3.9"
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: coact
      POSTGRES_PASSWORD: coact
      POSTGRES_DB: coact
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U coact -d coact"]
      interval: 5s
      timeout: 5s
      retries: 12

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  clickhouse:
    image: clickhouse/clickhouse-server:24.6
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - chdata:/var/lib/clickhouse
    healthcheck:
      test:
        ["CMD-SHELL", "wget -qO- http://localhost:8123/ping | grep -q 'Ok' "]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build: .
    environment:
      DATABASE_URL: postgresql+asyncpg://coact:coact@postgres:5432/coact
      REDIS_URL: redis://redis:6379/0
      CLICKHOUSE_URL: http://clickhouse:8123
      ACCESS_TOKEN_SECRET: dev-access-secret
      REFRESH_TOKEN_SECRET: dev-refresh-secret
      DEVICE_JWT_KEYS: '{"active_kid":"v1","keys":{"v1":"dev-device-secret"}}'
      WSS_URL: ws://localhost:8000/v1/ws/agent
      KAFKA_BROKERS: redpanda:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_EXTERNAL_ENDPOINT: http://localhost:9002
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      ARTIFACTS_BUCKET: coact-artifacts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      redpanda:
        condition: service_healthy
      minio:
        condition: service_started
    ports:
      - "8000:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --proxy-headers

  worker:
    image: backend-backend
    environment:
      DATABASE_URL: postgresql+asyncpg://coact:coact@postgres:5432/coact
      REDIS_URL: redis://redis:6379/0
      CLICKHOUSE_URL: http://clickhouse:8123
      ACCESS_TOKEN_SECRET: dev-access-secret
      REFRESH_TOKEN_SECRET: dev-refresh-secret
      DEVICE_JWT_KEYS: '{"active_kid":"v1","keys":{"v1":"dev-device-secret"}}'
      WSS_URL: ws://localhost:8000/v1/ws/agent
      KAFKA_BROKERS: redpanda:9092
      MINIO_ENDPOINT: http://minio:9000
      MINIO_EXTERNAL_ENDPOINT: http://localhost:9002
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      ARTIFACTS_BUCKET: coact-artifacts
      NODE_ID: worker-1
    depends_on:
      backend:
        condition: service_started
      redpanda:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python -m app.worker

  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.6
    command:
      - redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
      - "9644:9644"
    healthcheck:
      test:
        [
          "CMD",
          "bash",
          "-c",
          "rpk cluster info -X brokers=localhost:9092 || exit 1",
        ]
      interval: 5s
      timeout: 5s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-07-26T20-48-21Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9002:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:9000/minio/health/live",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
  chdata:
  minio_data:
